{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Rockfish Temperature Data\"\nauthor: \"Sara Michele Schaal\"\ndate: \"1/20/2019\"\noutput: html_document\n---\n\n```{r}\n\n# Install packages\n    if(!(\"plyr\" %in% installed.packages())){\n      install.packages(\"plyr\")\n    }\n    if(!(\"dplyr\" %in% installed.packages())){\n      install.packages(\"dplyr\")\n    }\n    if(!(\"reshape2\" %in% installed.packages())){\n      install.packages(\"reshape2\")\n    }\n    if(!(\"AICcmodavg\" %in% installed.packages())){\n      install.packages(\"AICcmodavg\")\n    }\n    if(!(\"ggplot2\" %in% installed.packages())){\n      install.packages(\"ggplot2\")\n    }\n    if(!(\"gridExtra\" %in% installed.packages())){\n      install.packages(\"gridExtra\")\n    }\n\n    library(plyr)\n    library(dplyr)\n    library(reshape2)\n    library(AICcmodavg)\n    library(ggplot2)\n    library(gridExtra)\n\n```\n\n```{r}\n####################\n#### BY Complex ####\n####################\n # Load Data Frames\n  temp.data <- read.csv(\"data/Temp_Data_Black.csv\")\n  head(temp.data)\n  temp.data2 <- temp.data[, -(14:15)]\n      \n # average temperatures measured by GAMMA and pH Meter and put values in new column\n  temp.data$meanTemp <- rowMeans(subset(temp.data, select = c(Gamma, pH_Meter)), \n                                     na.rm = TRUE)\n\n # Separate temperature data with experiment buckets in one and holding tanks in the other\n  df.expBuckets <-  temp.data[temp.data$Bucket_ID != \"BIG 1\" | temp.data$Bucket_ID != \"BIG 2\" | \n                              temp.data$Bucket_ID != \"BIG 3\" | temp.data$Bucket_ID != \"COLD\" | \n                              temp.data$Bucket_ID != \"HOT\" | temp.data$Bucket_ID != \"SW1\" | \n                              temp.data$Bucket_ID != \"SW2\", ]\n  df.holdBuckets <- temp.data[temp.data$Bucket_ID == \"BIG 1\" | \n                              temp.data$Bucket_ID == \"BIG 2\" | \n                              temp.data$Bucket_ID == \"BIG 3\",]\n\n # Turn data frame into tlb_df object so that text wraps so they don't fill screen\n  temp.df <- tbl_df(temp.data2)\n  levels(temp.df$Bucket_ID)\n      \n # get mean and standard deviation of bucket temps\n  summary.data <- select(temp.data, Bucket_ID, Temperature_Treatment, meanTemp)\n  melted.temp.data <- melt(summary.data, id.vars = c(\"Bucket_ID\", \"Temperature_Treatment\"), \n                           na.rm = TRUE)\n  summary.stats.black <- ddply(melted.temp.data, c(\"Bucket_ID\", \"Temperature_Treatment\"), \n                               summarise, mean = mean(value), sd = sd(value))\n  melted.treat.data <- melted.temp.data[!(melted.temp.data$Bucket_ID == \"COLD\" |\n                                          melted.temp.data$Bucket_ID == \"HOT\" |\n                                          melted.temp.data$Bucket_ID == \"SW1\" |\n                                          melted.temp.data$Bucket_ID == \"SW2\" |\n                                          melted.temp.data$Bucket_ID == \"BIG 1\" | \n                                          melted.temp.data$Bucket_ID == \"BIG 2\" |\n                                          melted.temp.data$Bucket_ID == \"BIG 3\" ),]\n  \n  summary.stats.blk.treat <- ddply(melted.treat.data, c(\"Bucket_ID\",\"Temperature_Treatment\"), \n                                summarise, mean = mean(value), sd = sd(value))\n\n  treatment.buckets.summ.blk <- summary.stats.black[c(1:5, 7, 9, 10:16), ]\n  all.treatment.buckets.blk <- summary.stats.black[c(1:16),]\n  write.csv(all.treatment.buckets.blk, \"data/black_exp_temps.csv\", row.names = FALSE)\n      \n####################      \n#### CQ Complex ####\n####################\n # Load Data\n  temp.data.cp <- read.csv(\"data/Temp_Data_Copper.csv\")\n  head(temp.data.cp)\n\n # Turn data fram into a tbl_df to wrap text and calculate Mean of Gamma and pH Meter temps\n  temp.df.cp <- tbl_df(temp.data.cp)\n  temp.df.cp$mean <- rowMeans(subset(temp.df.cp, select = c(Gamma, pH_Meter)), \n                                  na.rm = TRUE)\n\n # Calculate summary statistics\n  summary.data.cp <- select(temp.df.cp, Bucket_ID, Temperature_Treatment, mean)\n  melted.temp.data.cp <- melt(summary.data.cp, id.vars = c(\"Bucket_ID\", \"Temperature_Treatment\"), \n                                  na.rm = TRUE)\n  melted.treat.data.cp <- melted.temp.data.cp[!(melted.temp.data.cp$Bucket_ID == \"COLD\" |\n                                                melted.temp.data.cp$Bucket_ID == \"HOT\" |\n                                                melted.temp.data.cp$Bucket_ID == \"SW1\" |\n                                                melted.temp.data.cp$Bucket_ID == \"SW2\" |\n                                                melted.temp.data.cp$Bucket_ID == \"BIG 1\" | \n                                                melted.temp.data.cp$Bucket_ID == \"BIG 2\" |\n                                                melted.temp.data.cp$Bucket_ID == \"BIG 3\" ),]\n  \n  summary.stats.copper <- ddply(melted.temp.data.cp, c(\"Bucket_ID\",\"Temperature_Treatment\"), \n                                summarise, mean = mean(value), sd = sd(value))\n  summary.stats.copper.treat <- ddply(melted.treat.data.cp, c(\"Bucket_ID\",\"Temperature_Treatment\"), \n                                summarise, mean = mean(value), sd = sd(value))\n  \n # Separate out just treatment values\n  treatment.buckets.summ.cp <- summary.stats.copper[c(1:6, 9:16), ]\n  all.treatment.buckets.cp <- summary.stats.copper[c(1:16),]\n  write.csv(all.treatment.buckets.cp, \"data/copper_exp_temps.csv\", row.names = FALSE)\n\n  # Reorder data to be in numerical ascending order \n  # **(only way for loop to work properly)\n  summary.stats.blk.treat$Bucket_ID <- as.numeric(as.character(summary.stats.blk.treat$Bucket_ID))\n  summary.stats.copper.treat$Bucket_ID <- as.numeric(as.character(summary.stats.copper.treat$Bucket_ID))\n  black.temps.asc <-  summary.stats.blk.treat[order(summary.stats.blk.treat$Bucket_ID), ]\n  copper.temps.asc <- summary.stats.copper.treat[order(summary.stats.copper.treat$Bucket_ID), ]\n  \n  melted.treat.data$ExpTemp <- NULL\n  melted.treat.data.cp$ExpTemp <- NULL\n  # Fill in actual mean temperature data from experiment\n  # BY complex\n  for(i in 1:16){\n    for(j in 1:nrow(melted.treat.data)){\n      if(melted.treat.data$Bucket_ID[j] == i){\n       melted.treat.data$ExpTemp[j] <- black.temps.asc$mean[i]\n      }\n    }\n  }\n  \n  # CQ complex\n  for(i in 1:16){\n    for(j in 1:nrow(melted.treat.data.cp)){\n      if(melted.treat.data.cp$Bucket_ID[j] == i){\n        melted.treat.data.cp$ExpTemp[j] <- copper.temps.asc$mean[i]\n      }\n    }\n  }\n  \n# Combine dataframes for a master dataset\n  melted.treat.data$Species <- \"BY Complex\"\n  melted.treat.data.cp$Species <- \"CQ Complex\"\n  all.melted.data <- rbind(melted.treat.data, melted.treat.data.cp)\n  all.melted.data$Species <- as.factor(all.melted.data$Species)\n  melted.treat.data$RTemperature <- round(melted.treat.data$ExpTemp, 1)\n  melted.treat.data.cp$RTemperature <- round(melted.treat.data.cp$ExpTemp, 1)\n\n```\n\n\n```{r}\n######################################\n### Boxplot of Bucket Temperatures ###\n######################################\n  par(mfrow = c(1,2))\n  par(oma = c(4, 4, 1, 1))\n  par(mar = c(2, 2, 2, 1))\n  bp <- boxplot(value~RTemperature, data = melted.treat.data, ylim = c(8,24))\n  text(12, 9, labels = \"BY Complex Experiment\")\n  mtext(text = \"A\", side = 3, adj = 0.01, padj = 0.01)\n  boxplot(value~RTemperature, data = melted.treat.data.cp, col = \"orange\", ylim = c(8,24))\n  text(12, 9, labels = \"CQ Complex Experiment\")\n  mtext(text = \"B\", side = 3, adj = 0.01, padj = 0.01)\n  mtext(side = 2, outer = TRUE, cex = 1, line = 2.2, \n        text = expression(paste('Temperature Across Experiment (',degree,'C)',sep='')))\n  mtext(side = 1, outer = TRUE, cex = 1, line = 2.2,\n        text = expression(paste('Treatment Temperature (',degree,'C)',sep='')))\n  \n##################################\n#### Plot on Continuous Scale ####\n##################################\n  \n  by.exp.temp <-  ggplot(melted.treat.data, aes(x=ExpTemp, y=value)) +\n                         geom_boxplot(fill=\"white\", aes(group = cut_width(ExpTemp, 0.05))) + \n                         theme(panel.grid.major = element_blank(), \n                               panel.grid.minor = element_blank(),\n                               panel.background = element_blank(), \n                               axis.line = element_line(colour = \"black\")) + \n                         xlab(expression(paste('Treatment Temperature (',degree,'C)', sep=\"\"))) + \n                         ylab(expression(paste('Mean Temperature (',degree,'C)', sep=\"\"))) + \n                         annotate(geom=\"text\", x=20, y=11, label=\"BY Complex\",\n                                  color=\"black\")\n\n  cp.exp.temp <- ggplot(melted.treat.data.cp, aes(x=ExpTemp, y=value)) +\n                        geom_boxplot(fill=\"orange\", aes(group = cut_width(ExpTemp, 0.05))) + \n                        theme(panel.grid.major = element_blank(), \n                              panel.grid.minor = element_blank(),\n                              panel.background = element_blank(), \n                              axis.line = element_line(colour = \"black\")) +\n                        xlab(expression(paste('Treatment Temperature (',degree,'C)', sep=\"\"))) +\n                        ylab(NULL) +\n                        annotate(geom=\"text\", x=20, y=11, label=\"CQ Complex\",\n                                 color=\"black\")\n  grid.arrange(by.exp.temp, cp.exp.temp, nrow = 1)\n\n#####################\n#### Single Plot ####\n#####################\n  ### Does not look good\n  all.exp.temp <- ggplot(all.melted.data, aes(x=ExpTemp, y=value, colour = Species)) +\n                        geom_boxplot(aes(group = cut_width(ExpTemp, 0.05))) + \n                        scale_fill_manual(breaks = c(\"BY Complex\", \"CQ Complex\"), \n                                          values = c(\"white\", \"orange\")) +\n                        theme(panel.grid.major = element_blank(), \n                              panel.grid.minor = element_blank(),\n                              panel.background = element_blank(), \n                              axis.line = element_line(colour = \"black\")) +\n                        xlab(expression(paste('Treatment Temperature (',degree,'C)', sep=\"\"))) +\n                        ylab(NULL) +\n                        annotate(geom=\"text\", x=20, y=11, label=\"CQ Complex\",\n                                 color=\"black\")\n  \n```\n",
    "created" : 1548019306068.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "628262987",
    "id" : "46D3F00",
    "lastKnownWriteTime" : 1557677771,
    "last_content_update" : 1557677771619,
    "path" : "~/Documents/Northeastern/LotterhosLab/Research/Field_Work/2015/TPC_Experiment/Analysis/scripts/ExpTempData.Rmd",
    "project_path" : "scripts/ExpTempData.Rmd",
    "properties" : {
        "chunk_output_type" : "console",
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}